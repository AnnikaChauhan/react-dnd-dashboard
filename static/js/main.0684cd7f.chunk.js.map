{"version":3,"sources":["styles.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","createStyles","container","border","borderRadius","overflow","App","classes","useState","draggable","setDraggable","style","margin","Switch","checked","onChange","event","target","color","name","inputProps","Paper","height","layout","i","x","y","w","h","static","isResizable","minW","maxW","cols","rowHeight","width","containerPadding","className","isDraggable","Card","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAYeA,EAVGC,aAAW,kBAC3BC,YAAa,CACXC,UAAW,CACTC,OAAQ,oBACRC,aAAc,MACdC,SAAU,eCsDDC,EAxDH,WACV,IAAMC,EAAUR,IADA,EAEkBS,oBAAS,GAF3B,mBAETC,EAFS,KAEEC,EAFF,KAchB,OACE,sBAAKC,MAAO,CAAEC,OAAQ,UAAtB,UACE,+DACA,8BACE,2CACa,IACX,cAACC,EAAA,EAAD,CACEC,QAASL,EACTM,SAZW,SAACC,GACpBN,EAAaM,EAAMC,OAAOH,UAYlBI,MAAM,UACNC,KAAK,WACLC,WAAY,CAAE,aAAc,2BAIlC,cAACC,EAAA,EAAD,CAAOV,MAAO,CAAEW,OAAQ,SAAxB,SACE,eAAC,IAAD,CACEC,OA3BO,CACb,CAAEC,EAAG,IAAKC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,QAAQ,EAAMC,aAAa,GAC7D,CAAEN,EAAG,IAAKC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGG,KAAM,EAAGC,KAAM,GACjD,CAAER,EAAG,IAAKC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,IAyBzBK,KAAM,GACNC,UAAW,GACXC,MAAO,KACPvB,OAAQ,CAAC,GAAI,IACbwB,iBAAkB,CAAC,GAAI,IACvBC,UAAU,SACVC,YAAa7B,EARf,UAWE,cAAC8B,EAAA,EAAD,CAAMF,UAAW9B,EAAQL,UAAzB,mBAAwC,KAGxC,cAACqC,EAAA,EAAD,CAAMF,UAAW9B,EAAQL,UAAzB,mBAAwC,KAGxC,cAACqC,EAAA,EAAD,CAAMF,UAAW9B,EAAQL,UAAzB,mBAAwC,cCxCnCsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0684cd7f.chunk.js","sourcesContent":["import { createStyles, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    container: {\n      border: \"1px solid #E9E9E9\",\n      borderRadius: \"6px\",\n      overflow: \"hidden\",\n    },\n  })\n);\n\nexport default useStyles;\n","import React, { useState } from \"react\";\nimport GridLayout from \"react-grid-layout\";\nimport { Card, Switch, Paper } from \"@material-ui/core\";\nimport useStyles from \"./styles\";\n\nconst App = () => {\n  const classes = useStyles();\n  const [draggable, setDraggable] = useState(true);\n\n  const layout = [\n    { i: \"a\", x: 0, y: 0, w: 1, h: 2, static: true, isResizable: true },\n    { i: \"b\", x: 1, y: 0, w: 3, h: 2, minW: 2, maxW: 4 },\n    { i: \"c\", x: 4, y: 0, w: 1, h: 2 },\n  ];\n\n  const handleChange = (event) => {\n    setDraggable(event.target.checked);\n  };\n\n  return (\n    <div style={{ margin: \"0 10px\" }}>\n      <h1>React Drag and Drop Dashboard</h1>\n      <div>\n        <p>\n          Draggable:{\" \"}\n          <Switch\n            checked={draggable}\n            onChange={handleChange}\n            color=\"primary\"\n            name=\"checkedB\"\n            inputProps={{ \"aria-label\": \"primary checkbox\" }}\n          />\n        </p>\n      </div>\n      <Paper style={{ height: \"500px\" }}>\n        <GridLayout\n          layout={layout}\n          cols={12}\n          rowHeight={30}\n          width={1200}\n          margin={[10, 10]}\n          containerPadding={[10, 10]}\n          className=\"layout\"\n          isDraggable={draggable}\n          // onLayoutChange={() => console.log(\"layout has changed\")}\n        >\n          <Card className={classes.container} key=\"a\">\n            Card A\n          </Card>\n          <Card className={classes.container} key=\"b\">\n            Card B\n          </Card>\n          <Card className={classes.container} key=\"c\">\n            Card C\n          </Card>\n        </GridLayout>\n      </Paper>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}