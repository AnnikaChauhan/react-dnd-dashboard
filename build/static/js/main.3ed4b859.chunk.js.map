{"version":3,"sources":["styles.js","components/DragAndDrop.js","components/Tools.js","components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","createStyles","container","border","borderRadius","overflow","ReactGridLayout","WidthProvider","RGL","DragAndDrop","draggable","resizable","compactType","classes","layout","i","x","y","w","h","minW","maxW","cols","rowHeight","width","margin","containerPadding","className","isDraggable","isResizable","resizeHandles","resizeHandle","Card","Tools","handleDraggableChange","handleResizableChange","handleCompactTypeChange","style","display","justifyContent","Switch","checked","onChange","color","name","inputProps","FormControl","component","FormLabel","RadioGroup","aria-label","value","FormControlLabel","control","Radio","label","Dashboard","useState","setDraggable","setResizable","setCompactType","event","target","Paper","height","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ed4b859.chunk.js","sourcesContent":["import { createStyles, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    container: {\n      border: \"1px solid #E9E9E9\",\n      borderRadius: \"6px\",\n      overflow: \"hidden\",\n    },\n  })\n);\n\nexport default useStyles;\n","import React, { useState } from \"react\";\nimport { Card } from \"@material-ui/core\";\nimport useStyles from \"../styles\";\nimport RGL, { WidthProvider } from \"react-grid-layout\";\nimport AspectRatioIcon from \"@material-ui/icons/AspectRatio\";\n\nconst ReactGridLayout = WidthProvider(RGL);\n\nconst DragAndDrop = ({ draggable, resizable, compactType }) => {\n  const classes = useStyles();\n\n  const layout = [\n    { i: \"a\", x: 0, y: 0, w: 1, h: 2 },\n    { i: \"b\", x: 1, y: 0, w: 3, h: 2, minW: 2, maxW: 4 },\n    { i: \"c\", x: 4, y: 0, w: 1, h: 2 },\n    { i: \"d\", x: 1, y: 1, w: 2, h: 3 },\n    { i: \"e\", x: 2, y: 1, w: 2, h: 2 },\n  ];\n\n  return (\n    <ReactGridLayout\n      layout={layout}\n      cols={12}\n      rowHeight={30}\n      width={1200}\n      margin={[10, 10]}\n      containerPadding={[10, 10]}\n      className=\"layout\"\n      isDraggable={draggable}\n      isResizable={resizable}\n      resizeHandles={[\"se\"]}\n      resizeHandle={() => <AspectRatioIcon />}\n      compactType={compactType}\n      // onLayoutChange={() => console.log(\"layout has changed\")}\n    >\n      <Card className={classes.container} key=\"a\">\n        Card A\n      </Card>\n      <Card className={classes.container} key=\"b\">\n        Card B\n      </Card>\n      <Card className={classes.container} key=\"c\">\n        Card C\n      </Card>\n      <Card className={classes.container} key=\"d\">\n        Card D\n      </Card>\n      <Card className={classes.container} key=\"e\">\n        Card E\n      </Card>\n    </ReactGridLayout>\n  );\n};\n\nexport default DragAndDrop;\n","import React, { useState } from \"react\";\nimport {\n  Switch,\n  Radio,\n  RadioGroup,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n} from \"@material-ui/core\";\n\nconst Tools = ({\n  draggable,\n  handleDraggableChange,\n  resizable,\n  handleResizableChange,\n  compactType,\n  handleCompactTypeChange,\n}) => {\n  return (\n    <div style={{ margin: \"0 10px\" }}>\n      <div style={{ display: \"flex\", justifyContent: \"space-evenly\" }}>\n        <p>\n          Draggable:{\" \"}\n          <Switch\n            checked={draggable}\n            onChange={handleDraggableChange}\n            color=\"primary\"\n            name=\"checkedDrag\"\n            inputProps={{ \"aria-label\": \"primary checkbox\" }}\n          />\n        </p>\n        <p>\n          Resizable:{\" \"}\n          <Switch\n            checked={resizable}\n            onChange={handleResizableChange}\n            color=\"primary\"\n            name=\"checkedResize\"\n            inputProps={{ \"aria-label\": \"primary checkbox\" }}\n          />\n        </p>\n        <p>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">Compact Type</FormLabel>\n            <RadioGroup\n              aria-label=\"gender\"\n              name=\"gender1\"\n              value={compactType}\n              onChange={handleCompactTypeChange}\n            >\n              <div>\n                <FormControlLabel\n                  value=\"vertical\"\n                  control={<Radio />}\n                  label=\"Vertical\"\n                />\n                <FormControlLabel\n                  value=\"horizontal\"\n                  control={<Radio />}\n                  label=\"Horizontal\"\n                />\n                <FormControlLabel\n                  value=\"nocompaction\"\n                  control={<Radio />}\n                  label=\"No Compaction\"\n                />\n              </div>\n            </RadioGroup>\n          </FormControl>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Tools;\n","import React, { useState } from \"react\";\nimport { Paper } from \"@material-ui/core\";\nimport DragAndDrop from \"./DragAndDrop\";\nimport Tools from \"./Tools\";\n\nconst Dashboard = () => {\n  const [draggable, setDraggable] = useState(true);\n  const [resizable, setResizable] = useState(true);\n  const [compactType, setCompactType] = useState(\"vertical\");\n\n  const handleDraggableChange = (event) => setDraggable(event.target.checked);\n\n  const handleResizableChange = (event) => setResizable(event.target.checked);\n\n  const handleCompactTypeChange = (event) => setCompactType(event.target.value);\n\n  return (\n    <>\n      <Tools\n        draggable={draggable}\n        resizable={resizable}\n        compactType={compactType}\n        handleDraggableChange={handleDraggableChange}\n        handleResizableChange={handleResizableChange}\n        handleCompactTypeChange={handleCompactTypeChange}\n      />\n      <Paper style={{ height: \"500px\" }}>\n        <DragAndDrop\n          draggable={draggable}\n          resizable={resizable}\n          compactType={compactType}\n        />\n      </Paper>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import React from \"react\";\nimport Dashboard from \"./components/Dashboard\";\n\nconst App = () => {\n  return <Dashboard />;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}